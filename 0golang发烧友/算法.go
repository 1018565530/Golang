

判断 101-200 之间有多少个素数，并输出所有素数

copy和cat命令简单实现

判断一个url是否以http://开头，如果不是，则加上http://

判断一个路径是否以“/”结尾，如果不是，则加上/。

写一个函数返回一个字符串在另一个字符串的首次出现和最后出现位置

编写程序，在终端输出九九乘法表。

一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如6=1＋2＋3.
编程找出1000以内的所有完数。
  

输入一个字符串，判断其是否为回文。回文字符串是指从左到右读和从右到
左读完全相同的字符串。

输入一个字符串，判断其是否为回文。回文字符串是指从左到右读和从右到
左读完全相同的字符串。


计算两个大数相加的和，这两个大数会超过int64的表示范围.


排序和查找操作
sort.Ints对整数进行排序， sort.Strings对字符串进行排序, sort.Float64s对浮点数进行排序.


链表
每个节点包含下一个节点的地址，这样把所有的节点串起来了，通常把
链表中的第一个节点叫做链表头


双链表定义
如果有两个指针分别指向前一个节点和后一个节点，我们叫做双链表

二叉树定义
如果每个节点有两个指针分别用来指向左子树和右子树，我们把这样的
结构叫做二叉树


实现一个通用的链表类


实现一个负载均衡调度算法，支持随机、轮询等算法



不同goroutine之间如何进行通讯？
a. 全局变量和锁同步
b. Channel



goroutine和channel相结合

channel阻塞
带缓冲区的channel
chan之间的同步


超时控制



go程序调试


go程序编译和Makefile



gofmt工具简介


godoc文档生成工具详解



正则表达式标准库介绍


锁与线程同步标准库介绍


第三方包开发与演练


启动外部命令和程序


Go程序的性能profile


cpu 与 内存pprof


在线pprof


代码演练8：错误处理实例




Go高并发模型


Lazy 生成器



多路复用介绍


并发数控制


代码演练9：并发实战



tcp服务代码实例


一个简单的web服务实例


web模板使用


模板语法详解


代码演练10：web服务开发



Go语言常见编程模式


代码演练12：短url项目实战


Beego框架介绍


model逻辑


view编写


静态文件处理


配置读取


路由设置


代码演练13：Beego开发实例1


日志处理


数据输出


代码演练


ORM使用


CRUD操作


代码演练14：Beego开发实例2



秒杀系统之本质


秒杀系统之千万并发支撑



秒杀系统之架构设计


秒杀系统之长连接子系统设计


秒杀系统之Redis模块开发


秒杀系统之管理api设计


秒杀系统之管理api开发


秒杀系统之白名单开发


秒杀系统之放号模块设计


秒杀系统之放号策略开发


秒杀系统之系统整合


秒杀系统之过载保护


秒杀系统之性能优化


秒杀系统总结


海量日志系统简介


海量日志系统架构设计


海量日志系统之收集客户端设计


海量日志系统之收集限速模块开发


海量日志系统之kafka搭建


海量日志系统之ES（检索）搭建


海量日志系统之transfer模块设计



海量日志系统之系统整合


海量日志系统web管理平台搭建



海量日志系统之系统测试



海量日志系统总结

Go语言GUI图形编程

系统I/O操作
1.os包；2.文件属性相关函数；3.链接相关概念及函数；4.目录操作相关概念及函数

进程与IPC通信
1.进程相关的概念；2.进程操作相关函数；3.孤儿进程；4.僵尸进程；5.进程回收；6.进程间通信

线程与同步
1.互斥量；2.死锁以及解决方案；3.读写锁；4.条件变量；5.条件变量实现生产消费者模型；6.线程同步解决哲学家就餐问题；7.Sync包


1.Goroutine协程的概念；2.Goroutine调度器机制；3.协程的高并发编程
7.channel管道与CSP同步机制	1.CSP通讯顺序同步机制；2.channel管道及特性；3.缓存channel与非缓存channel；4.并发的循环；5.select


网络协议与网路编程
1.OSI七层模型结构；2.TCP/IP 4层模型结构；3.B/S、C/S优缺点对比；4.常见网络协议格式；5.套接字；网络字节序；6.IP地址转换函数7.编写TCP的C/S网络程序；8.UDP通信机制与模型；9.本地套接字；10.三次握手建立连接过程；11.四次握手断开连接过程；12.滑动窗口概念；13.错误处理函数封装；14.TCP状态转换；15.2MSL概念；16.端口复用方法；17.半关闭；
18.socket网络编程
1.socket客户端编程；2.socket服务端编程；3.案例：并发的时钟服务器；
4.案例：并发的回显服务器；5.实战：高并发网络聊天室


Go并发的爬虫系统开发实战
1.url基本概念；2.http协议；3.正则表达式；
案例:并发的百度贴吧爬虫；案例:高并发内涵段子爬虫

分布式文件系统fastDFS
1.分布式概念；2.tracker、storage、client相关配置；3.fastDFS中go的api封装


beego框架
1.beego的框架环境搭建；
2.controller设计:
（2.1）参数配置；
（2.2）路由设置；
（2.3）session控制；
（2.4）多种格式数据输出；
（2.5）请求数据处理
3.model设计:
（3.1）ORM使用；
（3.2）CRUD操作；
（3.3）高级查询；
（3.4）原生SQL查询
4.view设计:
（4.1）模板语法指南；
（4.2）模板处理



常用密码算法
1.对称加密体系；2.非对称加密体系；3.数字签名；4.数据机密性；5.身份鉴别；6.数据完整性；7.抗抵赖；8.国产加密算法

常用密码协议
1.密码学安全协议；2.数字证书认证(CA)中心；3.公钥基础设施PKI系统

案例：中心化的国税上交系统	
1.基于中心化的安全；2.点对点的信息安全机密性、完整性；3.安全中心：数字证书颁发中心


Go语言与微服务	
1.微服务的优势；2.docker容器构建微服务；3.protobuf微服务交互协议；
4.gRPC远程调度机制；5.服务发现；6.基于go-micro微服务实战

Go语言智能合约的开发与部署	
1.实现智能合约接口；2.智能合约的依赖关系；3.智能合约的数据格式；4.智能合约的接口解析

Go + Hyperledger Fabric	
1.Fabric Go语言SDK；2.fabric-sdk-go client端编程；3.Ledger Query；4.Multi Org；5.E2E


Go与数据结构	
1.Go语言与队列；2.Go语言与链表；
3.Go语言与堆栈；4.Go语言与二叉树

Go与常用算法	
5.归并排序；6.二分查找；7.堆排序

Go与C语言高级编程	
1.指针高级；2.函数指针；3.回调函数；4.Cgo模块








database/sql


 