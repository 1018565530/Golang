Golang 内存布局

了解对象内存布局，有助于理解值传递、引用传递等概念。

+--------+
|   1    |  	int
+--------+

+--------+
|  3.14  |  	float32
+--------+

+---+---+---+---+ 
| 1 | 2 | 3 | 4 | 	[4]int 
+---+---+---+---+


string
 +---------+---------+ 
 | pointer |  len=5  | 		s="hello" 
 +---------+---------+
      |
      +---+---+---+---+---+ 
      | h | e | l | l | o |      [5]byte
      +---+---+---+---+---+
          |
      +---------+---------+ 
      | pointer |  len=2  |      sub=s[1:3]
      +---------+---------+
 

struct
+---+---+---+---+---+---+---+---+
| 1 | 2 | 0 | 0 | 3 | 0 | 0 | 0 |     struct{abyte;bbyte;cint32}={1,2,3} 
+---+---+---+---+---+---+---+---+
  a   b           c

+-----------+-----+
| pointera  |  b  |      struct{a*int;bint} 
+-----------+-----+
     |
     +-----+ 
     | int | 
     +-----+


slice
+---------+---------+---------+
| pointer |  len=8  |  cap=8  |        x=[]int{0,1,2,3,4,5,6,7} 
+---------+---------+---------+
     |
     +---+---+---+---+---+---+---+---+ 
     | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |     [8]int 
     +---+---+---+---+---+---+---+---+
         |
     +---------+---------+---------+ 
     | pointer |  len=2  |  cap=5  |       y=x[1:3:6] 
     +---------+---------+---------+


interface
+---------+---------+
|  *itab  |  *data  |         struct Iface
+---------+---------+
     |          | 
     |          | 
     +------+   +------+ 
     | Itab |   | data | 
     +------+   +------+


new
+---------+
| pointer |     s = new([3]int)
+---------+
     |
     +---+---+---+ 
     | 0 | 0 | 0 |       [3]int 
     +---+---+---+


make
  
+---------+---------+---------+ 
| pointer |  len=1  |  cap=3  |     slice=make([]int,1,3) 
+---------+---------+---------+
     |
     +---+---+---+ 
     | 0 | 0 | 0 |     [3]int 
     +---+---+---+

+---------+
| pointer |   map = make(map[string]int); 实际返回的是一个指针包装对象。 
+---------+
     |
     ..................
     .                .
     . hashmap.c Hmap .  
     .                .
     ..................

+---------+
| pointer | channel = make(chan int); 实际返回的是一个指针包装对象。 
+---------+
     |
     ..................
     .                .
     .  chan.c Hchan  .  
     .                .
     ..................


